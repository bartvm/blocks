#!/usr/bin/env python
import sys
from argparse import ArgumentParser, FileType

from blocks.scripts import create_vocabulary

if __name__ == '__main__':
    parser = ArgumentParser(
        description="Construct a vocabulary from a list of token counts.\n\n"
                    "The input is expected to be a file with a token count "
                    "and a token on each line, separated by a space.\n\n"
                    "The UNK, BOS and EOS token (if given) are numbered "
                    "first, in that order. Then tokens are numbered i the "
                    "order in which they were read. To number words "
                    "alphabetically pipe through `sort -t ' ' -k 2`.")
    parser.add_argument(
        'infile', type=FileType('r'), nargs='?', default=sys.stdin,
        help="The file from which to read token counts.")
    parser.add_argument(
        'outfile', type=FileType('wb'),
        help="The file to which to write the dictionary of word counts.")
    parser.add_argument('--bos', type=str, nargs='?', const='<S>',
                        help="Add the BOS token to the vocabulary.")
    parser.add_argument('--eos', type=str, nargs='?', const='</S>',
                        help="Add the EOS token to the vocabulary.")
    parser.add_argument('--unk', type=str, nargs='?', default='<UNK>',
                        help="The unknown token to use.")
    parser.add_argument('--limit', type=int,
                        help="Limit the number of words in the vocabulary. "
                             "This includes the (optional) UNK, EOS and BOS "
                             "tokens")
    args = parser.parse_args()

    create_vocabulary(args.infile, args.outfile, args.unk, args.eos, args.bos,
                      args.limit)
